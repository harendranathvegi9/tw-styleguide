.twsg-style{
/*
  Stacked to horizontal  

  Using a single set of `.twsg-col-md-*` grid classes, you can create a basic grid system that starts out stacked on mobile devices and tablet devices (the extra small to small range) before becoming horizontal on desktop (medium) devices. Place grid columns in any `.twsg-grid-row`.

  Markup:
  ../markup/grid-horizontal.html

  Styleguide 1.1
 */

/*
  Fluid container

  Turn any fixed-width grid layout into a full-width layout by changing your outermost `.twsg-grid-container` to `.twsg-grid-container-fluid`.
 
 ```
    <div class="container-fluid">
      <div class="row">
        ...
      </div>
    </div>
 ```

  Styleguide 1.2
 */

/*
  Mobile and desktop

  Don't want your columns to simply stack in smaller devices? Use the extra small and medium device grid classes by adding `.twsg-col-xs-*` `.twsg-col-md-*` to your columns. See the example below for a better idea of how it all works.
   
  Markup:
  ../markup/grid-mb-dt.html

  Styleguide 1.3
 */

/*
  Mobile, tablet, desktop

  Build on the previous example by creating even more dynamic and powerful layouts with tablet `.col-sm-*` classes.

  Markup:
  ../markup/grid-mb-tb-dt.html

  Styleguide 1.4
 */

/*
  Responsive column resets

  Markup:
  ../markup/grid-column-resets.html

  Styleguide 1.5
*/

/*
  Offsetting columns

  Move columns to the right using `.twsg-col-md-offset-*` classes. These classes increase the left margin of a column by `*` columns. For example, `.twsg-col-md-offset-4` moves `.twsg-col-md-4` over four columns.

  Markup:
  ../markup/grid-column-offsets.html

  Styleguide 1.6
*/

/*
  Nesting columns

  To nest your content with the default grid, add a new .row and set of `.col-sm-*` columns within an existing `.col-sm-*` column. Nested rows should include a set of columns that add up to 12 or fewer (it is not required that you use all 12 available columns).

  Markup:
  ../markup/grid-column-nesting.html

  Styleguide 1.7
 */

/*
  Column ordering

  Easily change the order of our built-in grid columns with `.col-md-push-*` and `.col-md-pull-*` modifier classes.

  Markup:
  ../markup/grid-column-reorder.html

  Styleguide 1.8
 */

  * {
      -webkit-box-sizing: border-box;
      -moz-box-sizing: border-box;
      box-sizing: border-box;
    }

  .show-grid{
    margin-bottom: 15px;
  }

  .show-grid [class^=twsg-col-] {
    padding-top: 10px;
    padding-bottom: 10px;
    background-color: #eee;
    border: 1px solid #ddd;
  }

  .twsg-grid-container-fluid {
    margin-left:0;
    margin-right:0;
    padding-left:  (@twsg-grid-gutter-width / 2);
    padding-right: (@twsg-grid-gutter-width / 2);
  }

  // Set the container width, and override it for fixed navbars in media queries
  .twsg-grid-container {
    .container-fixed();

    @media (min-width: @twsg-screen-sm) {
      width: @container-sm;
    }
    @media (min-width: @twsg-screen-md) {
      width: @container-md;
    }
    @media (min-width: @twsg-screen-lg) {
      width: @container-lg;
    }
  }

  // mobile first defaults
  .twsg-grid-row {
    .make-row();
  }

  // Common styles for small and large grid columns
  .make-grid-columns();

  // Extra small grid
  //
  // Columns, offsets, pushes, and pulls for extra small devices like
  // smartphones.

  .make-grid-columns-float(xs);
  .make-grid(@twsg-grid-columns, xs, width);
  .make-grid(@twsg-grid-columns, xs, pull);
  .make-grid(@twsg-grid-columns, xs, push);
  .make-grid(@twsg-grid-columns, xs, offset);


  // Small grid
  //
  // Columns, offsets, pushes, and pulls for the small device range, from phones
  // to tablets.

  @media (min-width: @twsg-screen-sm) {
    .make-grid-columns-float(sm);
    .make-grid(@twsg-grid-columns, sm, width);
    .make-grid(@twsg-grid-columns, sm, pull);
    .make-grid(@twsg-grid-columns, sm, push);
    .make-grid(@twsg-grid-columns, sm, offset);
  }


  // Medium grid
  //
  // Columns, offsets, pushes, and pulls for the desktop device range.

  @media (min-width: @twsg-screen-md) {
    .make-grid-columns-float(md);
    .make-grid(@twsg-grid-columns, md, width);
    .make-grid(@twsg-grid-columns, md, pull);
    .make-grid(@twsg-grid-columns, md, push);
    .make-grid(@twsg-grid-columns, md, offset);
  }


  // Large grid
  //
  // Columns, offsets, pushes, and pulls for the large desktop device range.

  @media (min-width: @twsg-screen-lg) {
    .make-grid-columns-float(lg);
    .make-grid(@twsg-grid-columns, lg, width);
    .make-grid(@twsg-grid-columns, lg, pull);
    .make-grid(@twsg-grid-columns, lg, push);
    .make-grid(@twsg-grid-columns, lg, offset);
  }


}